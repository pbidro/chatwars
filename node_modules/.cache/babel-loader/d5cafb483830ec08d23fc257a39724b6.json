{"ast":null,"code":"import _objectSpread from \"/Users/pibustamante/Documents/repositorios/chatwars/chatwars/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {},\n  methods: _objectSpread({\n    register: function register() {\n      if (this.password.length < 8) {\n        alert(\"contrase単a debe ser mayor a 8 caracteres\");\n        return;\n      }\n\n      if (this.password != this.password2) {\n        alert(\"las contrase単as no coinciden\");\n        return;\n      }\n\n      this.form.user.foto = this.signUp({\n        email: this.form.user.userMail,\n        password: this.password,\n        newUser: this.form\n      });\n      this.$router.go(\"/panel\");\n    },\n    randomIntFromInterval: function randomIntFromInterval() {\n      return Math.floor(Math.random() * (20 - 0 + 1) + 0);\n    }\n  }, mapActions([\"signIn\", \"signUp\", \"signOut\", \"instanceFirestore\", \"getMyData\", \"getCurrentUser\", \"getAnotherUsers\"])),\n  computed: _objectSpread({}, mapState([\"usuario\", \"miData\", \"otherUsers\"])),\n  created: function created() {\n    var _this = this;\n\n    fetch(\"https://akabab.github.io/starwars-api/api/all.json\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return _this.starwarsapi = data;\n    });\n    this.instanceFirestore(getFirestore);\n  },\n  mounted: function mounted() {\n    this.getCurrentUser();\n    this.getMyData();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;EACAA,IADA,kBACA,EADA;EAGAC;IACAC,QADA,sBACA;MACA;QACAC;QACA;MACA;;MACA;QACAA;QACA;MACA;;MACA,sBACA;QACAC,8BADA;QAEAC,uBAFA;QAGAC;MAHA,EADA;MAMA;IACA,CAjBA;IAkBAC,qBAlBA,mCAkBA;MACA;IACA;EApBA,GAqBAC,YACA,QADA,EAEA,QAFA,EAGA,SAHA,EAIA,mBAJA,EAKA,WALA,EAMA,gBANA,EAOA,iBAPA,EArBA,CAHA;EAkCAC,4BACAC,6CADA,CAlCA;EAqCAC,OArCA,qBAqCA;IAAA;;IACAC,4DACAC,IADA,CACA;MAAA;IAAA,CADA,EAEAA,IAFA,CAEA;MAAA;IAAA,CAFA;IAIA;EACA,CA3CA;EA6CAC,OA7CA,qBA6CA;IACA;IACA;EACA;AAhDA","names":["data","methods","register","alert","email","password","newUser","randomIntFromInterval","mapActions","computed","mapState","created","fetch","then","mounted"],"sourceRoot":"src/views","sources":["SignUpView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Crear una nueva cuenta</h1>\n    <p>email: <input v-model=\"user.email\" /></p>\n    <p>password: <input v-model=\"user.password\" /></p>\n    <button @click=\"registrar\">registrar</button>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"vuex\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport default {\n  name: \"RegistrarView\",\n  data() {\n    return {\n      random_number: this.randomIntFromInterval(),\n      starwarsapi: \"\",\n      password: \"\",\n      password2: \"\",\n      form: {\n        user: {\n          userMail: \"\",\n          registerDate: Date.now(),\n          lastConection: Date.now(),\n          matchCounter: 100,\n          matchUsers: [],\n          name: \"\",\n          foto: this.starwarsapi[this.random_number].image,\n        },\n      },\n      show: true,\n    };\n  },\n  methods: {},\n};\n</script>\n\n\n<script>\nexport default {\n  data() {},\n\n  methods: {\n    register() {\n      if (this.password.length < 8) {\n        alert(\"contrase単a debe ser mayor a 8 caracteres\");\n        return;\n      }\n      if (this.password != this.password2) {\n        alert(\"las contrase単as no coinciden\");\n        return;\n      }\n      this.form.user.foto = \n      this.signUp({\n        email: this.form.user.userMail,\n        password: this.password,\n        newUser: this.form,\n      });\n      this.$router.go(\"/panel\");\n    },\n    randomIntFromInterval() {\n      return Math.floor(Math.random() * (20 - 0 + 1) + 0);\n    },\n    ...mapActions([\n      \"signIn\",\n      \"signUp\",\n      \"signOut\",\n      \"instanceFirestore\",\n      \"getMyData\",\n      \"getCurrentUser\",\n      \"getAnotherUsers\",\n    ]),\n  },\n  computed: {\n    ...mapState([\"usuario\", \"miData\", \"otherUsers\"]),\n  },\n  created() {\n    fetch(\"https://akabab.github.io/starwars-api/api/all.json\")\n      .then((response) => response.json())\n      .then((data) => (this.starwarsapi = data));\n\n    this.instanceFirestore(getFirestore);\n  },\n\n  mounted() {\n    this.getCurrentUser();\n    this.getMyData();\n  },\n};\n</script>\n\n<style scoped>\n.form {\n  padding-bottom: 2rem;\n}\nbutton {\n  margin: 13px 12px 12px 10px;\n}\n\nbutton {\n  margin: 13px;\n}\n.form-container {\n  margin-top: 100px;\n}\n.form-container__image {\n  width: 500px;\n}\n\n.overflow-hidden {\n  background-color: black;\n  padding: 0px;\n  border-radius: 20px;\n  height: 555px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}