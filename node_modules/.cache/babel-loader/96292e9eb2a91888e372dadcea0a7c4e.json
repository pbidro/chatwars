{"ast":null,"code":"import _objectSpread from \"/Users/pibustamante/Documents/repositorios/chatwars/chatwars/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from \"vuex\";\nimport { getFirestore } from \"firebase/firestore\";\nexport default {\n  data: function data() {\n    return {\n      random_number: this.randomIntFromInterval(),\n      starwarsapi: \"\",\n      password: \"\",\n      password2: \"\",\n      form: {\n        name: \"\",\n        foto: \"\",\n        user: {\n          userMail: \"\",\n          registerDate: Date.now(),\n          lastConection: Date.now(),\n          matchCounter: 100,\n          matchUsers: []\n        }\n      },\n      show: true\n    };\n  },\n  methods: _objectSpread({\n    register: function register() {\n      this.form.foto = this.starwarsapi[this.random_number].image;\n\n      if (this.password.length < 8) {\n        alert(\"contraseña debe ser mayor a 8 caracteres\");\n        return;\n      }\n\n      if (this.password != this.password2) {\n        alert(\"las contraseñas no coinciden\");\n        return;\n      }\n\n      this.signUp({\n        email: this.form.user.userMail,\n        password: this.password,\n        newUser: this.form\n      });\n    },\n    randomIntFromInterval: function randomIntFromInterval() {\n      return Math.floor(Math.random() * (20 - 0 + 1) + 0);\n    }\n  }, mapActions([\"signIn\", \"signUp\", \"signOut\", \"instanceFirestore\", \"getMyData\", \"getCurrentUser\", \"getAnotherUsers\"])),\n  computed: _objectSpread({}, mapState([\"usuario\", \"miData\", \"otherUsers\"])),\n  created: function created() {\n    var _this = this;\n\n    fetch(\"https://akabab.github.io/starwars-api/api/all.json\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return _this.starwarsapi = data;\n    });\n    this.instanceFirestore(getFirestore);\n  },\n  mounted: function mounted() {\n    this.getCurrentUser();\n    this.getMyData();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,2CADA;MAEAC,eAFA;MAGAC,YAHA;MAIAC,aAJA;MAKAC;QACAC,QADA;QAEAC,QAFA;QAGAC;UACAC,YADA;UAEAC,wBAFA;UAGAC,yBAHA;UAIAC,iBAJA;UAKAC;QALA;MAHA,CALA;MAgBAC;IAhBA;EAkBA,CApBA;EAsBAC;IACAC,QADA,sBACA;MACA;;MACA;QACAC;QACA;MACA;;MACA;QACAA;QACA;MACA;;MACA;QACAC,8BADA;QAEAf,uBAFA;QAGAgB;MAHA;IAKA,CAhBA;IAiBAC,qBAjBA,mCAiBA;MACA;IACA;EAnBA,GAoBAC,kHApBA,CAtBA;EA2CAC,4BACAC,6CADA,CA3CA;EA8CAC,OA9CA,qBA8CA;IAAA;;IACAC,4DACAC,IADA,CACA;MAAA;IAAA,CADA,EAEAA,IAFA,CAEA;MAAA;IAAA,CAFA;IAIA;EAEA,CArDA;EAuDAC,OAvDA,qBAuDA;IACA;IACA;EACA;AA1DA","names":["data","random_number","starwarsapi","password","password2","form","name","foto","user","userMail","registerDate","lastConection","matchCounter","matchUsers","show","methods","register","alert","email","newUser","randomIntFromInterval","mapActions","computed","mapState","created","fetch","then","mounted"],"sourceRoot":"src/views","sources":["SignUpView.vue"],"sourcesContent":["<template>\n  <div class=\"form\">\n    <a> </a>\n\n    <b-container class=\"form-container\">\n      <b-card no-body class=\"overflow-hidden text-white bg-dark\">\n        <b-row no-gutters>\n          <b-col md=\"6\">\n            <b-card-img\n              :src=\"\n                starwarsapi[random_number].image\n                /*https://www.solofondos.com/wp-content/uploads/2016/03/star-wars-wallpaper-android.jpg*/\n              \"\n              class=\"hover-shadow\"\n            ></b-card-img>\n          </b-col>\n          <b-col md=\"6\">\n            <b-card-body title=\"Registrarse\">\n              <p>Tu personaje será: {{ starwarsapi[random_number].name }}</p>\n              <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\n                <b-form-group\n                  id=\"input-group-1\"\n                  label=\"Dirección de correo electrónico:\"\n                  label-for=\"input-1\"\n                  description=\"Nunca compartiremos su correo electrónico con nadie más.\"\n                >\n                  <b-form-input\n                    id=\"input-1\"\n                    v-model=\"form.user.userMail\"\n                    type=\"email\"\n                    placeholder=\"email\"\n                    required\n                  ></b-form-input>\n                </b-form-group>\n\n                <b-form-group\n                  id=\"input-group-2\"\n                  label=\"Tu nombre:\"\n                  label-for=\"input-2\"\n                >\n                  <b-form-input\n                    id=\"input-2\"\n                    v-model=\"form.name\"\n                    placeholder=\"Tu nombre\"\n                    required\n                  ></b-form-input>\n                </b-form-group>\n\n                <b-form-group\n                  id=\"input-group-3\"\n                  label=\"Tu contraseña:\"\n                  label-for=\"input-3\"\n                >\n                  <b-form-input\n                    id=\"input-3\"\n                    placeholder=\"Contraseña\"\n                    required\n                    v-model=\"password\"\n                    type=\"password\"\n                  ></b-form-input>\n                </b-form-group>\n\n                <b-form-group\n                  id=\"input-group-3\"\n                  label=\"Confirmar contraseña:\"\n                  label-for=\"input-3\"\n                >\n                  <b-form-input\n                    id=\"input-3\"\n                    placeholder=\"Confirma tu contraseña\"\n                    required\n                    v-model=\"password2\"\n                    type=\"password\"\n                  ></b-form-input>\n                </b-form-group>\n\n                <b-button pill @click=\"register()\" squared variant=\"success\" size=\"lg\"\n                  >Registrarse</b-button\n                >\n              </b-form>\n            </b-card-body>\n          </b-col>\n        </b-row>\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"vuex\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport default {\n  data() {\n    return {\n      random_number: this.randomIntFromInterval(),\n      starwarsapi: \"\",\n      password: \"\",\n      password2: \"\",\n      form: {\n        name: \"\",\n        foto: \"\",\n        user: {\n          userMail: \"\",\n          registerDate: Date.now(),\n          lastConection: Date.now(),\n          matchCounter: 100,\n          matchUsers: [],\n        },\n      },\n      show: true,\n    };\n  },\n\n  methods: {\n    register() {\n      this.form.foto = this.starwarsapi[this.random_number].image;\n      if (this.password.length < 8) {\n        alert(\"contraseña debe ser mayor a 8 caracteres\");\n        return;\n      }\n      if (this.password != this.password2) {\n        alert(\"las contraseñas no coinciden\");\n        return;\n      }\n      this.signUp({\n        email: this.form.user.userMail,\n        password: this.password,\n        newUser: this.form,\n      });\n    },\n    randomIntFromInterval() {\n      return Math.floor(Math.random() * (20 - 0 + 1) + 0);\n    },\n    ...mapActions([\"signIn\", \"signUp\", \"signOut\", \"instanceFirestore\",\"getMyData\",\"getCurrentUser\",\"getAnotherUsers\"]),\n  },  computed: {\n    ...mapState([\"usuario\", \"miData\", \"otherUsers\"]),\n  },\n  created() {\n    fetch(\"https://akabab.github.io/starwars-api/api/all.json\")\n      .then((response) => response.json())\n      .then((data) => (this.starwarsapi = data));\n\n    this.instanceFirestore(getFirestore);\n\n  },\n  \n    mounted() {\n      this.getCurrentUser();\n      this.getMyData();\n}\n};\n</script>\n\n<style scoped>\n.form {\n  padding-bottom: 2rem;\n}\nbutton {\n  margin: 13px 12px 12px 10px;\n}\n\nbutton {\n  margin: 13px;\n}\n.form-container {\n  margin-top: 100px;\n}\n.form-container__image {\n  width: 500px;\n}\n\n.overflow-hidden {\n  background-color: black;\n  padding: 0px;\n  border-radius: 20px;\n  height: 555px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}