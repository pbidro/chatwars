{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: 'Table columns'\n    },\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: 'Table data'\n    },\n    type: {\n      type: String,\n      // striped | hover\n      default: '',\n      description: 'Whether table is striped or hover type'\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: '<thead> css classes'\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: '<tbody> css classes'\n    }\n  },\n  computed: {\n    tableClass: function tableClass() {\n      return this.type && \"table-\".concat(this.type);\n    }\n  },\n  methods: {\n    hasValue: function hasValue(item, column) {\n      return item[column.toLowerCase()] !== 'undefined';\n    },\n    itemValue: function itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA;EACAA,kBADA;EAEAC;IACAC;MACAC,WADA;MAEAC;QAAA;MAAA,CAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,WADA;MAEAC;QAAA;MAAA,CAFA;MAGAC;IAHA,CANA;IAWAF;MACAA,YADA;MACA;MACAC,WAFA;MAGAC;IAHA,CAXA;IAgBAE;MACAJ,YADA;MAEAC,WAFA;MAGAC;IAHA,CAhBA;IAqBAG;MACAL,YADA;MAEAC,WAFA;MAGAC;IAHA;EArBA,CAFA;EA6BAI;IACAC,UADA,wBACA;MACA;IACA;EAHA,CA7BA;EAkCAC;IACAC,QADA,oBACAC,IADA,EACAC,MADA,EACA;MACA;IACA,CAHA;IAIAC,SAJA,qBAIAF,IAJA,EAIAC,MAJA,EAIA;MACA;IACA;EANA;AAlCA","names":["name","props","columns","type","default","description","data","theadClasses","tbodyClasses","computed","tableClass","methods","hasValue","item","column","itemValue"],"sourceRoot":"src/components/admin","sources":["BaseTable.vue"],"sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n      <tr>\n        <slot name=\"columns\" :columns=\"columns\">\n          <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\n        </slot>\n      </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n      <tr v-for=\"(item, index) in data\" :key=\"index\">\n        <slot :row=\"item\" :index=\"index\">\n          <td\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            v-if=\"hasValue(item, column)\"\n          >\n            {{ itemValue(item, column) }}\n          </td>\n        </slot>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: () => [],\n      description: 'Table columns'\n    },\n    data: {\n      type: Array,\n      default: () => [],\n      description: 'Table data'\n    },\n    type: {\n      type: String, // striped | hover\n      default: '',\n      description: 'Whether table is striped or hover type'\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: '<thead> css classes'\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: '<tbody> css classes'\n    }\n  },\n  computed: {\n    tableClass() {\n      return this.type && `table-${this.type}`;\n    }\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== 'undefined';\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};\n</script>\n<style></style>\n"]},"metadata":{},"sourceType":"module"}