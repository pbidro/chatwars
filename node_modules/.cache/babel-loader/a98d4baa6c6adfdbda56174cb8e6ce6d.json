{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'collapse',\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 250,\n      description: 'Collapse animation duration'\n    },\n    multipleActive: {\n      type: Boolean,\n      default: true,\n      description: 'Whether you can have multiple collapse items opened at the same time'\n    },\n    activeIndex: {\n      type: Number,\n      default: -1,\n      description: 'Active collapse item index'\n    }\n  },\n  provide: function provide() {\n    return {\n      animationDuration: this.animationDuration,\n      multipleActive: this.multipleActive,\n      addItem: this.addItem,\n      removeItem: this.removeItem,\n      deactivateAll: this.deactivateAll\n    };\n  },\n  data: function data() {\n    return {\n      items: []\n    };\n  },\n  methods: {\n    addItem: function addItem(item) {\n      var index = this.$slots.default.indexOf(item.$vnode);\n\n      if (index !== -1) {\n        this.items.splice(index, 0, item);\n      }\n    },\n    removeItem: function removeItem(item) {\n      var items = this.items;\n      var index = items.indexOf(item);\n\n      if (index > -1) {\n        items.splice(index, 1);\n      }\n    },\n    deactivateAll: function deactivateAll() {\n      this.items.forEach(function (item) {\n        item.active = false;\n      });\n    },\n    activateItem: function activateItem() {\n      if (this.activeIndex !== -1) {\n        this.items[this.activeIndex].active = true;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.activateItem();\n    });\n  },\n  watch: {\n    activeIndex: function activeIndex() {\n      this.activateItem();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAYA;EACAA,gBADA;EAEAC;IACAC;MACAC,YADA;MAEAC,YAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,aADA;MAEAC,aAFA;MAGAC;IAHA,CANA;IAWAE;MACAJ,YADA;MAEAC,WAFA;MAGAC;IAHA;EAXA,CAFA;EAmBAG,OAnBA,qBAmBA;IACA;MACAN,yCADA;MAEAI,mCAFA;MAGAG,qBAHA;MAIAC,2BAJA;MAKAC;IALA;EAOA,CA3BA;EA4BAC,IA5BA,kBA4BA;IACA;MACAC;IADA;EAGA,CAhCA;EAiCAC;IACAL,OADA,mBACAM,IADA,EACA;MACA;;MACA;QACA;MACA;IACA,CANA;IAOAL,UAPA,sBAOAK,IAPA,EAOA;MACA;MACA;;MACA;QACAF;MACA;IACA,CAbA;IAcAF,aAdA,2BAcA;MACA;QACAI;MACA,CAFA;IAGA,CAlBA;IAmBAC,YAnBA,0BAmBA;MACA;QACA;MACA;IACA;EAvBA,CAjCA;EA0DAC,OA1DA,qBA0DA;IAAA;;IACA;MACA;IACA,CAFA;EAGA,CA9DA;EA+DAC;IACAX,WADA,yBACA;MACA;IACA;EAHA;AA/DA","names":["name","props","animationDuration","type","default","description","multipleActive","activeIndex","provide","addItem","removeItem","deactivateAll","data","items","methods","item","activateItem","mounted","watch"],"sourceRoot":"src/components/admin/Collapse","sources":["Collapse.vue"],"sourcesContent":["<template>\n  <div\n    id=\"accordion\"\n    role=\"tablist\"\n    aria-multiselectable=\"true\"\n    class=\"accordion\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'collapse',\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 250,\n      description: 'Collapse animation duration'\n    },\n    multipleActive: {\n      type: Boolean,\n      default: true,\n      description: 'Whether you can have multiple collapse items opened at the same time'\n    },\n    activeIndex: {\n      type: Number,\n      default: -1,\n      description: 'Active collapse item index'\n    }\n  },\n  provide() {\n    return {\n      animationDuration: this.animationDuration,\n      multipleActive: this.multipleActive,\n      addItem: this.addItem,\n      removeItem: this.removeItem,\n      deactivateAll: this.deactivateAll\n    };\n  },\n  data() {\n    return {\n      items: []\n    };\n  },\n  methods: {\n    addItem(item) {\n      const index = this.$slots.default.indexOf(item.$vnode);\n      if (index !== -1) {\n        this.items.splice(index, 0, item);\n      }\n    },\n    removeItem(item) {\n      const items = this.items;\n      const index = items.indexOf(item);\n      if (index > -1) {\n        items.splice(index, 1);\n      }\n    },\n    deactivateAll() {\n      this.items.forEach(item => {\n        item.active = false;\n      });\n    },\n    activateItem() {\n      if (this.activeIndex !== -1) {\n        this.items[this.activeIndex].active = true;\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.activateItem();\n    });\n  },\n  watch: {\n    activeIndex() {\n      this.activateItem();\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}