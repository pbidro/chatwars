{"ast":null,"code":"import _objectSpread from \"/Users/pibustamante/Documents/repositorios/chatwars/chatwars/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\nimport noUiSlider from 'nouislider';\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description: '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: function _default() {\n        return [true, false];\n      },\n      description: '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: function _default() {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description: '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      },\n      description: '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data: function data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider: function createSlider() {\n      var _this = this;\n\n      noUiSlider.create(this.$el, _objectSpread({\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range\n      }, this.options));\n      var slider = this.$el.noUiSlider;\n      slider.on('slide', function () {\n        var value = slider.get();\n\n        if (value !== _this.value) {\n          _this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      var slider = this.$el.noUiSlider;\n      var sliderValue = slider.get();\n\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (oldValue.length === newValue.length && oldValue.every(function (v, i) {\n            return v === newValue[i];\n          })) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAIA;AAEA;EACAA,mBADA;EAEAC;IACAC;MACAC,6BADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAG,cAFA;MAGAF;IAHA,CALA;IAUAG;MACAJ,qBADA;MAEAG,UAFA;MAGAF,aACA;IAJA,CAVA;IAgBAI;MACAL,sBADA;MAEAG;QAAA;MAAA,CAFA;MAGAF,aACA;IAJA,CAhBA;IAsBAK;MACAN,YADA;MAEAG;QACA;UACAI,MADA;UAEAC;QAFA;MAIA,CAPA;MAQAP,aACA;IATA,CAtBA;IAiCAQ;MACAT,YADA;MAEAG;QACA;MACA,CAJA;MAKAF,aACA;IANA;EAjCA,CAFA;EA4CAS,IA5CA,kBA4CA;IACA;MACAC;IADA;EAGA,CAhDA;EAiDAC;IACAC,YADA,0BACA;MAAA;;MACAC;QACAV,+BADA;QAEAC,wDAFA;QAGAC;MAHA,GAIA,YAJA;MAMA;MACAK;QACA;;QACA;UACA;QACA;MACA,CALA;IAMA;EAfA,CAjDA;EAkEAI,OAlEA,qBAkEA;IACA;EACA,CApEA;EAqEAC;IACAjB,KADA,iBACAkB,QADA,EACAC,QADA,EACA;MACA;MACA;;MACA;QACA;UACA,IACAA,uCACAA;YAAA;UAAA,EAFA,EAGA;YACAP;UACA;QACA,CAPA,MAOA;UACAA;QACA;MACA;IACA;EAhBA;AArEA","names":["name","props","value","type","description","disabled","default","start","connect","range","min","max","options","data","slider","methods","createSlider","noUiSlider","mounted","watch","newValue","oldValue"],"sourceRoot":"src/components/admin","sources":["BaseSlider.vue"],"sourcesContent":["<template>\n  <div class=\"slider\" :disabled=\"disabled\"></div>\n</template>\n<script>\nimport noUiSlider from 'nouislider';\n\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description:\n        '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false],\n      description:\n        '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description:\n        '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n      description:\n        '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on('slide', () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (\n            oldValue.length === newValue.length &&\n            oldValue.every((v, i) => v === newValue[i])\n          ) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"]},"metadata":{},"sourceType":"module"}