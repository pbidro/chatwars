{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CollapseTransition } from 'vue2-transitions';\nexport default {\n  name: 'collapse-item',\n  components: {\n    CollapseTransition: CollapseTransition\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n      description: 'Collapse item title'\n    },\n    id: String\n  },\n  inject: {\n    animationDuration: {\n      default: 250\n    },\n    multipleActive: {\n      default: false\n    },\n    addItem: {\n      default: function _default() {}\n    },\n    removeItem: {\n      default: function _default() {}\n    },\n    deactivateAll: {\n      default: function _default() {}\n    }\n  },\n  computed: {\n    itemId: function itemId() {\n      return this.id || this.title;\n    }\n  },\n  data: function data() {\n    return {\n      active: false\n    };\n  },\n  methods: {\n    activate: function activate() {\n      var wasActive = this.active;\n\n      if (!this.multipleActive) {\n        this.deactivateAll();\n      }\n\n      this.active = !wasActive;\n      console.log(this.active);\n    }\n  },\n  mounted: function mounted() {\n    this.addItem(this);\n  },\n  destroyed: function destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n\n    this.removeItem(this);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC,WAFA;MAGAC;IAHA,CADA;IAMAC;EANA,CALA;EAaAC;IACAC;MACAJ;IADA,CADA;IAIAK;MACAL;IADA,CAJA;IAOAM;MACAN;IADA,CAPA;IAUAO;MACAP;IADA,CAVA;IAaAQ;MACAR;IADA;EAbA,CAbA;EA8BAS;IACAC,MADA,oBACA;MACA;IACA;EAHA,CA9BA;EAmCAC,IAnCA,kBAmCA;IACA;MACAC;IADA;EAGA,CAvCA;EAwCAC;IACAC,QADA,sBACA;MACA;;MACA;QACA;MACA;;MACA;MACAC;IACA;EARA,CAxCA;EAkDAC,OAlDA,qBAkDA;IACA;EACA,CApDA;EAqDAC,SArDA,uBAqDA;IACA;MACA;IACA;;IACA;EACA;AA1DA","names":["name","components","CollapseTransition","props","title","type","default","description","id","inject","animationDuration","multipleActive","addItem","removeItem","deactivateAll","computed","itemId","data","active","methods","activate","console","mounted","destroyed"],"sourceRoot":"src/components/admin/Collapse","sources":["CollapseItem.vue"],"sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-header role=\"tab\" class=\"card-header\" :aria-expanded=\"active\">\n      <a\n        data-toggle=\"collapse\"\n        data-parent=\"#accordion\"\n        :href=\"`#${itemId}`\"\n        @click.prevent=\"activate\"\n        :aria-controls=\"`content-${itemId}`\"\n      >\n        <slot name=\"title\"> {{ title }} </slot>\n        <i class=\"tim-icons icon-minimal-down\"></i>\n      </a>\n    </b-card-header>\n    <collapse-transition :duration=\"animationDuration\">\n      <div\n        v-show=\"active\"\n        :id=\"`content-${itemId}`\"\n        role=\"tabpanel\"\n        :aria-labelledby=\"title\"\n        class=\"collapsed\"\n      >\n        <div class=\"card-body\"><slot></slot></div>\n      </div>\n    </collapse-transition>\n  </b-card>\n</template>\n<script>\nimport { CollapseTransition } from 'vue2-transitions';\n\nexport default {\n  name: 'collapse-item',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n      description: 'Collapse item title'\n    },\n    id: String\n  },\n  inject: {\n    animationDuration: {\n      default: 250\n    },\n    multipleActive: {\n      default: false\n    },\n    addItem: {\n      default: () => {}\n    },\n    removeItem: {\n      default: () => {}\n    },\n    deactivateAll: {\n      default: () => {}\n    }\n  },\n  computed: {\n    itemId() {\n      return this.id || this.title;\n    }\n  },\n  data() {\n    return {\n      active: false\n    };\n  },\n  methods: {\n    activate() {\n      let wasActive = this.active;\n      if (!this.multipleActive) {\n        this.deactivateAll();\n      }\n      this.active = !wasActive;\n      console.log(this.active)\n    }\n  },\n  mounted() {\n    this.addItem(this);\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n    this.removeItem(this);\n  }\n};\n</script>\n<style></style>\n"]},"metadata":{},"sourceType":"module"}