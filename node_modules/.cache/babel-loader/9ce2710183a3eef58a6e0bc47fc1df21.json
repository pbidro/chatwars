{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down',\n      // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;EACAA,qBADA;EAEAC;IACAC;MACAC,YADA;MAEAC,cAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,YADA;MAEAC,iBAFA;MAGAC;IAHA,CANA;IAWAE;MACAJ,YADA;MAEAE;IAFA,CAXA;IAeAG;MACAL,YADA;MAEAC,eAFA;MAEA;MACAC;IAHA,CAfA;IAoBAI;MACAN,YADA;MAEAE;IAFA,CApBA;IAwBAK;MACAP,6BADA;MAEAE;IAFA,CAxBA;IA4BAM;MACAR,sBADA;MAEAE;IAFA,CA5BA;IAgCAO;MACAT,aADA;MAEAE;IAFA,CAhCA;IAoCAQ;MACAV,aADA;MAEAE,oDAFA;MAGAD;IAHA;EApCA,CAFA;EA4CAU,IA5CA,kBA4CA;IACA;MACAC;IADA;EAGA,CAhDA;EAiDAC;IACAC,cADA,4BACA;MACA;MACA;IACA,CAJA;IAKAC,aALA,2BAKA;MACA;MACA;IACA;EARA;AAjDA","names":["name","props","tag","type","default","description","titleTag","title","direction","icon","titleClasses","menuClasses","menuOnRight","hasToggle","data","isOpen","methods","toggleDropDown","closeDropDown"],"sourceRoot":"src/components/admin","sources":["BaseDropdown.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[{ show: isOpen }, `drop${direction}`]\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"btn-rotate\"\n        :class=\"[{'dropdown-toggle': hasToggle}, titleClasses]\"\n        :aria-expanded=\"isOpen\"\n        data-toggle=\"dropdown\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i> {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down', // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown {\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}